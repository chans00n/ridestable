name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run nightly at 1 AM UTC
    - cron: '0 1 * * *'

jobs:
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stable_ride_e2e
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Setup backend environment
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/stable_ride_e2e
          REDIS_URL: redis://localhost:6379
        run: |
          cp .env.example .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "REDIS_URL=$REDIS_URL" >> .env
          echo "JWT_SECRET=e2e-test-secret" >> .env
          echo "JWT_REFRESH_SECRET=e2e-test-refresh-secret" >> .env
          echo "SENDGRID_API_KEY=test-key" >> .env
          echo "STRIPE_SECRET_KEY=sk_test_dummy" >> .env
          echo "STRIPE_WEBHOOK_SECRET=whsec_test_dummy" >> .env

      - name: Run database migrations
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/stable_ride_e2e
        run: |
          npx prisma migrate deploy
          npx prisma db seed

      - name: Start backend server
        working-directory: ./backend
        env:
          NODE_ENV: test
          PORT: 8000
        run: |
          npm run build
          npm start &
          sleep 10

      - name: Start frontend server
        working-directory: ./frontend
        env:
          VITE_API_URL: http://localhost:8000
          VITE_GOOGLE_MAPS_API_KEY: ${{ secrets.TEST_GOOGLE_MAPS_API_KEY }}
          VITE_STRIPE_PUBLISHABLE_KEY: pk_test_dummy
        run: |
          npm run build
          npm run preview -- --port 3000 &
          sleep 10

      - name: Run E2E tests
        working-directory: ./frontend
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          API_URL: http://localhost:8000
        run: npm run test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos
          path: frontend/test-results/
          retention-days: 7